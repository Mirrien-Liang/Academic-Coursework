lines(x=log10(df4_2$`Worldwide Box office gross`),
y=100*(df4_2$`Rotten Tomatoes Critical`),col=3)
points(x=log10(df4_2$`Worldwide Box office gross`),
y=100*(df4_2$`Rotten Tomatoes Critical`),
col=3,
cex = 0.5)
legend("center", c("RAVG RT Score","Budget","Budget","WBOG","WBOG"),
col=c(1,2,2,3,3), lty=c(1,1,NA,1,NA), pch = c(NA,NA,1,NA,1), cex=0.8)
legend("rightbottom", c("RAVG RT Score","Budget","WBOG"),
col=c(1,2,3), lty=c(1,1,1), pch = c(NA,1,1), cex=0.8)
legend("bottomright", c("RAVG RT Score","Budget","WBOG"),
col=c(1,2,3), lty=c(1,1,1), pch = c(NA,1,1), cex=0.8)
windows(8,6)
plot(x=log10(df4$Budget),y=100*(df4$ravg_score_3),
type = "l",
xlim = c(8,9.5),
ylim = c(45,100),
xlab = "Log10 Dollars ($)",
ylab = "RT scores (%)",
main = "Log10 Budget and Log10 WBOG vs RT Score Overlaid with
Moving Average for Ratings to Budget ",
col = 1)
# The question did not request a point or a line plot
# If line plot, we need to make sure x-axis is sorted with respect to the score
lines(x=log10(df4$Budget),
y=100*(df4$`Rotten Tomatoes Critical`),col=2)
points(x=log10(df4$Budget),
y=100*(df4$`Rotten Tomatoes Critical`),
col=2,
cex = 0.5)
lines(x=log10(df4_2$`Worldwide Box office gross`),
y=100*(df4_2$`Rotten Tomatoes Critical`),col=3)
points(x=log10(df4_2$`Worldwide Box office gross`),
y=100*(df4_2$`Rotten Tomatoes Critical`),
col=3,
cex = 0.5)
legend("bottomright", c("RAVG RT Score","Budget","WBOG"),
col=c(1,2,3), lty=c(1,1,1), pch = c(NA,1,1), cex=0.8)
plot(x=log10(df4$Budget),y=100*(df4$ravg_score_3),
type = "l",
xlim = c(8,9.5),
ylim = c(45,100),
xlab = "Log10 Dollars ($)",
ylab = "RT scores (%)",
main = "Log10 Budget and Log10 WBOG vs RT Score Overlaid with
Moving Average for Ratings to Budget ",
col = 1)
plot(x=log10(df4$Budget),y=100*(df4$ravg_score_3),
type = "l",
xlim = c(8,9.5),
ylim = c(45,100),
xlab = "Log10 Dollars ($)",
ylab = "RT scores (%)",
main = "Log10 Budget and Log10 WBOG vs RT Score Overlaid with
Moving Average for Ratings to Budget ",
col = 1,
cex = 2)
plot(x=log10(df4$Budget),y=100*(df4$ravg_score_3),
type = "l",
xlim = c(8,9.5),
ylim = c(45,100),
xlab = "Log10 Dollars ($)",
ylab = "RT scores (%)",
main = "Log10 Budget and Log10 WBOG vs RT Score Overlaid with
Moving Average for Ratings to Budget ",
col = 1,
lwd = 2)
# The question did not request a point or a line plot
# If line plot, we need to make sure x-axis is sorted with respect to the score
lines(x=log10(df4$Budget),
y=100*(df4$`Rotten Tomatoes Critical`),col=2)
points(x=log10(df4$Budget),
y=100*(df4$`Rotten Tomatoes Critical`),
col=2,
cex = 0.5)
lines(x=log10(df4_2$`Worldwide Box office gross`),
y=100*(df4_2$`Rotten Tomatoes Critical`),col=3)
points(x=log10(df4_2$`Worldwide Box office gross`),
y=100*(df4_2$`Rotten Tomatoes Critical`),
col=3,
cex = 0.5)
legend("bottomright", c("RAVG RT Score","Budget","WBOG"),
col=c(1,2,3), lty=c(1,1,1), pch = c(NA,1,1), cex=0.8)
legend("bottomright", c("RAVG RT Score","Budget","WBOG"),
col=c(1,2,3), lty=c(1,1,1), pch = c(NA,1,1), lwd = c(2,1,1), cex=0.8)
windows(10,6)
windows(15,6)
plot(x=log10(df4$Budget),y=100*(df4$ravg_score_3),
type = "l",
xlim = c(8,9.5),
ylim = c(45,100),
xlab = "Log10 Dollars ($)",
ylab = "RT scores (%)",
main = "Log10 Budget and Log10 WBOG vs RT Score Overlaid with
Moving Average for Ratings to Budget ",
col = 1,
lwd = 2)
windows(10,6)
plot(x=log10(df4$Budget),y=100*(df4$ravg_score_3),
type = "l",
xlim = c(8,9.5),
ylim = c(45,100),
xlab = "Log10 Dollars ($)",
ylab = "RT scores (%)",
main = "Log10 Budget and Log10 WBOG vs RT Score Overlaid with
Moving Average for Ratings to Budget ",
col = 1,
lwd = 2)
# The question did not request a point or a line plot
# If line plot, we need to make sure x-axis is sorted with respect to the score
lines(x=log10(df4$Budget),
y=100*(df4$`Rotten Tomatoes Critical`),col=2)
points(x=log10(df4$Budget),
y=100*(df4$`Rotten Tomatoes Critical`),
col=2,
cex = 0.5)
lines(x=log10(df4_2$`Worldwide Box office gross`),
y=100*(df4_2$`Rotten Tomatoes Critical`),col=3)
points(x=log10(df4_2$`Worldwide Box office gross`),
y=100*(df4_2$`Rotten Tomatoes Critical`),
col=3,
cex = 0.5)
legend("bottomright",
c("RAVG RT Score","Budget","WBOG"),
col=c(1,2,3),
lty=c(1,1,1),
pch = c(NA,1,1),
lwd = c(2,1,1),
cex=0.8)
plot(x=log10(df4$Budget),y=100*(df4$ravg_score_3),
type = "l",
xlim = c(8,9.5),
ylim = c(45,100),
xlab = "Log10 Dollars ($)",
ylab = "RT scores (%)",
main = "Log10 Budget and Log10 WBOG vs RT Score Overlaid with
Moving Average for Ratings to Budget ",
col = 1,
lwd = 2)
# The question did not request a point or a line plot
# If line plot, we need to make sure x-axis is sorted with respect to the score
lines(x=log10(df4$Budget),
y=100*(df4$`Rotten Tomatoes Critical`),col=2)
points(x=log10(df4$Budget),
y=100*(df4$`Rotten Tomatoes Critical`),
col=2,
cex = 0.5)
lines(x=log10(df4_2$`Worldwide Box office gross`),
y=100*(df4_2$`Rotten Tomatoes Critical`),col=3)
points(x=log10(df4_2$`Worldwide Box office gross`),
y=100*(df4_2$`Rotten Tomatoes Critical`),
col=3,
cex = 0.5)
legend("bottomright",
c("RAVG RT Score","Budget","WBOG"),
col=c(1,2,3),
lty=c(1,1,1),
pch = c(NA,1,1),
lwd = c(2,1,1),
cex=0.8)
View(df3)
plot(df3$Year,df3$`Rotten Tomatoes Critical`)
plot(df3$Year,100*df3$`Rotten Tomatoes Critical`)
View(df2_2)
View(df)
mdy(df$`U.S. release date`)
df2_3 <- df %>%
mutate(ravg_budget_3 = rollmean(Budget,3,fill=NA),
ravg_WBOG_3 = rollmean(`Worldwide Box office gross`,3,fill=NA),
date = mdy(`U.S. release date`)) %>%
select(`U.S. release date`,ravg_budget_3,ravg_WBOG_3,)
View(df2_3)
plot(x=df2_3$date,y=log10(df2_3$ravg_WBOG_3),
type = "l",
ylim = c(8,9.5),
xlab = "Year",
ylab = "Log10 Dollars $",
main = "Rolling Average of log10 WBOG and log10 Budget over Years (k=3)",
col = 1)
df2_3 <- df %>%
mutate(ravg_budget_3 = rollmean(Budget,3,fill=NA),
ravg_WBOG_3 = rollmean(`Worldwide Box office gross`,3,fill=NA),
date = mdy(`U.S. release date`)) %>%
select(date,ravg_budget_3,ravg_WBOG_3,)
plot(x=df2_3$date,y=log10(df2_3$ravg_WBOG_3),
type = "l",
ylim = c(8,9.5),
xlab = "Year",
ylab = "Log10 Dollars $",
main = "Rolling Average of log10 WBOG and log10 Budget over Years (k=3)",
col = 1)
lines(x=df2_3$date,y=log10(df2_3$ravg_budget_3),col=2)
legend(2008, 9.5, c("WBOG","Budget"),
col=1:2, lty=c(1,1), cex=0.8)
legend("upperleft", c("WBOG","Budget"),
col=1:2, lty=c(1,1), cex=0.8)
legend("topleft", c("WBOG","Budget"),
col=1:2, lty=c(1,1), cex=0.8)
plot(x=df2_3$date,y=log10(df2_3$ravg_WBOG_3),
type = "l",
ylim = c(8,9.5),
xlab = "Year",
ylab = "Log10 Dollars $",
main = "Rolling Average of log10 WBOG and log10 Budget over Date (k=3)",
col = 1)
lines(x=df2_3$date,y=log10(df2_3$ravg_budget_3),col=2)
legend("topleft", c("WBOG","Budget"),
col=1:2, lty=c(1,1), cex=0.8)
windows(8,6)
df2_3 <- df %>%
mutate(ravg_budget_3 = rollmean(Budget,3,fill=NA),
ravg_WBOG_3 = rollmean(`Worldwide Box office gross`,3,fill=NA),
date = mdy(`U.S. release date`)) %>%
select(date,ravg_budget_3,ravg_WBOG_3,)
plot(x=df2_3$date,y=log10(df2_3$ravg_WBOG_3),
type = "l",
ylim = c(8,9.5),
xlab = "Date",
ylab = "Log10 Dollars $",
main = "Rolling Average of log10 WBOG and log10 Budget over Date (k=3)",
col = 1)
lines(x=df2_3$date,y=log10(df2_3$ravg_budget_3),col=2)
legend("topleft", c("WBOG","Budget"),
col=1:2, lty=c(1,1), cex=0.8)
plot(x=df2_3$date,y=log10(df2_3$ravg_WBOG_3),
type = "l",
ylim = c(8,9.5),
xlab = "Date",
ylab = "Log10 Dollars $",
main = "Rolling Average of log10 WBOG and log10 Budget over Date (k=3)",
col = 1)
lines(x=df2_3$date,y=log10(df2_3$ravg_budget_3),col=2)
legend("topleft", c("WBOG","Budget"),
col=1:2, lty=c(1,1), cex=1)
plot(x=df2_2$Year,y=log10(df2_2$ravg_WBOG_3),
type = "l",
ylim = c(8,9.5),
xlab = "Year",
ylab = "Log10 Dollars ($)",
main = "Rolling Average of log10 WBOG and log10 Budget over Years (k=3)",
col = 1)
# use ggplot to plot rolling average of all three widths for budgets and WBOG
# tidy the data first:
df2_2 %>% pivot_longer(names_to = "rolling_mean_key",
values_to = "rolling_mean_value",
cols = c(ravg_budget_3,
ravg_budget_5,
ravg_budget_7,
ravg_WBOG_3,
ravg_WBOG_5,
ravg_WBOG_7)) %>%
ggplot(aes(x = Year,
y = log10(rolling_mean_value),
color = rolling_mean_key)) +
geom_line() +
labs(color = "Metric",
x = "Year",
y = "Rolling Average",
title = "Rolling Average of log10 WBOG and log10 Budget over years") +
theme(plot.title = element_text(hjust = 0.5))
# use ggplot to plot rolling average of all three widths for budgets and WBOG
# tidy the data first:
df2_2 %>% pivot_longer(names_to = "rolling_mean_key",
values_to = "rolling_mean_value",
cols = c(ravg_budget_3,
ravg_budget_5,
ravg_budget_7,
ravg_WBOG_3,
ravg_WBOG_5,
ravg_WBOG_7)) %>%
ggplot(aes(x = Year,
y = log10(rolling_mean_value),
color = rolling_mean_key)) +
geom_line() +
labs(color = "Metric",
x = "Year",
y = "Rolling Average (log10 dollars)",
title = "Rolling Average of log10 WBOG and log10 Budget over years") +
theme(plot.title = element_text(hjust = 0.5))
# First we plot points of RT ratings vs year
plot(df3$Year,100*df3$`Rotten Tomatoes Critical`)
df5 <- df %>% mutate(ate = mdy(`U.S. release date`)) %>%
select(date,`Rotten Tomatoes Critical`,`Metacritic Critical`)
df5 <- df %>% mutate(date = mdy(`U.S. release date`)) %>%
select(date,`Rotten Tomatoes Critical`,`Metacritic Critical`)
View(df5)
plot(df5$date,100*df3$`Rotten Tomatoes Critical`,
xlab = "Date")
plot(df5$date,100*df5$`Rotten Tomatoes Critical`,
xlab = "Date")
points(df5$date,df5$`Metacritic Critical`)
plot(df5$date,100*df5$`Rotten Tomatoes Critical`,
xlab = "Date",
col=1)
points(df5$date,df5$`Metacritic Critical`,
col = 2)
points(df5$date,df5$`Metacritic Critical`,
col = 2,
pty = 2)
plot(df5$date,100*df5$`Rotten Tomatoes Critical`,
xlab = "Date",
col=1)
points(df5$date,df5$`Metacritic Critical`,
col = 2,
pty = 2)
points(df5$date,df5$`Metacritic Critical`,
col = 2,
pty = 3)
plot(df5$date,100*df5$`Rotten Tomatoes Critical`,
xlab = "Date",
col=1)
points(df5$date,df5$`Metacritic Critical`,
col = 2,
pty = 3)
points(df5$date,df5$`Metacritic Critical`,
col = 2,
pch = 3)
plot(df5$date,100*df5$`Rotten Tomatoes Critical`,
xlab = "Date",
col=1)
points(df5$date,df5$`Metacritic Critical`,
col = 2,
pch = 3)
windows(10,6)
plot(df5$date,100*df5$`Rotten Tomatoes Critical`,
xlab = "Date",
col=1)
points(df5$date,df5$`Metacritic Critical`,
col = 2,
pch = 3)
plot(df5$date,100*df5$`Rotten Tomatoes Critical`,
xlab = "Date",
col=1,
ylim=c(40,100))
points(df5$date,df5$`Metacritic Critical`,
col = 2,
pch = 3)
legend("bottomleft",
c("RT Ratings", "Metacritic Ratings"),
col = c(1,2),
pch = c(1,3),
cex = 0.8)
lines(df5$date,100*df5$`Rotten Tomatoes Critical`,
col=1)
lines(df5$date,df5$`Metacritic Critical`,
col = 2,
lty = 2)
legend("bottomleft",
c("RT Ratings", "Metacritic Ratings"),
col = c(1,2),
pch = c(1,3),
lty = c(1,2),
cex = 0.8)
plot(df5$date,100*df5$`Rotten Tomatoes Critical`,
xlab = "Date",
ylab = "Rating Scores",
col=1,
ylim=c(40,100))
points(df5$date,df5$`Metacritic Critical`,
col = 2,
pch = 3)
lines(df5$date,100*df5$`Rotten Tomatoes Critical`,
col=1)
lines(df5$date,df5$`Metacritic Critical`,
col = 2,
lty = 2)
legend("bottomleft",
c("RT Ratings", "Metacritic Ratings"),
col = c(1,2),
pch = c(1,3),
lty = c(1,2),
cex = 0.8)
source("C:/Users/qq147/Desktop/SFU/STAT240/lab06/labQ3.R", echo=TRUE)
suppressWarnings(library(lubridate))
# use base r
windows(7,7)
plot(x=df2$Year,y=log10(df2$average_gross),
type = "l",
ylim = c(8,9.5),
xlab = "Year",
ylab = "Log10 Dollars ($)",
main = "Moving Average of log WBOG and log Budget over Years",
col = 1)
lines(x=df2$Year,y=log10(df2$average_budget),col=2)
legend(2008, 9.5, c("Average WBOG","Average Budget"),
col=1:2, lty=c(1,1), cex=0.8)
# use base r to plot rolling averages with k=3
windows(7,7)
plot(x=df2_2$Year,y=log10(df2_2$ravg_WBOG_3),
type = "l",
ylim = c(8,9.5),
xlab = "Year",
ylab = "Log10 Dollars ($)",
main = "Rolling Average of log10 WBOG and log10 Budget over Years (k=3)",
col = 1)
lines(x=df2_2$Year,y=log10(df2_2$ravg_budget_3),col=2)
legend(2008, 9.5, c("WBOG","Budget"),
col=1:2, lty=c(1,1), cex=0.8)
windows(8,6)
df2_3 <- df %>%
mutate(ravg_budget_3 = rollmean(Budget,3,fill=NA),
ravg_WBOG_3 = rollmean(`Worldwide Box office gross`,3,fill=NA),
date = mdy(`U.S. release date`)) %>%
select(date,ravg_budget_3,ravg_WBOG_3,)
plot(x=df2_3$date,y=log10(df2_3$ravg_WBOG_3),
type = "l",
ylim = c(8,9.5),
xlab = "Date",
ylab = "Log10 Dollars $",
main = "Rolling Average of log10 WBOG and log10 Budget over Date (k=3)",
col = 1)
lines(x=df2_3$date,y=log10(df2_3$ravg_budget_3),col=2)
legend("topleft", c("WBOG","Budget"),
col=1:2, lty=c(1,1), cex=1)
ggplot(df3, aes(x=log10(Revenue))) +
geom_histogram(aes(y=..density..),
binwidth=.1,
colour="black", fill="white") +
geom_density(alpha=.2) +
labs(x = "log10 Revenue ($)", y = "Density",
title = "Histogram of log10 Revenue with Kernel Density Curve") +
theme(plot.title = element_text(hjust = 0.5))
hist(log10(df3$Revenue),
breaks=12,
xlab="log10 Revenue $",
main = "Histogram of log10 Revenue with Kernal Density Curve")
lines(density(log10(df3$Revenue)))
hist(log10(df3$Revenue),
breaks=12,
xlab="log10 Revenue ($)",
main = "Histogram of log10 Revenue with Kernal Density Curve")
lines(density(log10(df3$Revenue)))
windows(10,6)
plot(x=log10(df4$Budget),y=100*(df4$ravg_score_3),
type = "l",
xlim = c(8,9.5),
ylim = c(45,100),
xlab = "Log10 Dollars ($)",
ylab = "RT scores (%)",
main = "Log10 Budget and Log10 WBOG vs RT Score Overlaid with
Moving Average for Ratings to Budget ",
col = 1,
lwd = 2)
# The question did not request a point or a line plot, where we will plot both.
# If line plot, we need to make sure x-axis is sorted with respect to the score
lines(x=log10(df4$Budget),
y=100*(df4$`Rotten Tomatoes Critical`),col=2)
points(x=log10(df4$Budget),
y=100*(df4$`Rotten Tomatoes Critical`),
col=2,
cex = 0.5)
lines(x=log10(df4_2$`Worldwide Box office gross`),
y=100*(df4_2$`Rotten Tomatoes Critical`),col=3)
points(x=log10(df4_2$`Worldwide Box office gross`),
y=100*(df4_2$`Rotten Tomatoes Critical`),
col=3,
cex = 0.5)
legend("bottomright",
c("RAVG RT Score","Budget","WBOG"),
col=c(1,2,3),
lty=c(1,1,1),
pch = c(NA,1,1),
lwd = c(2,1,1),
cex=0.8)
windows(10,6)
plot(df5$date,100*df5$`Rotten Tomatoes Critical`,
xlab = "Date",
ylab = "Rating Scores",
col=1,
ylim=c(40,100))
points(df5$date,df5$`Metacritic Critical`,
col = 2,
pch = 3)
lines(df5$date,100*df5$`Rotten Tomatoes Critical`,
col=1)
lines(df5$date,df5$`Metacritic Critical`,
col = 2,
lty = 2)
legend("bottomleft",
c("RT Ratings (%)", "Metacritic Ratings"),
col = c(1,2),
pch = c(1,3),
lty = c(1,2),
cex = 0.8)
# print the first 10 rows
head(df1,n=10)
head(df)
marvel_url = "https://en.wikipedia.org/wiki/List_of_Marvel_Cinematic_Universe_films"
marvel = read_html(marvel_url)
length(html_nodes(marvel, "table"))
bop <- html_table(html_nodes(marvel, "table")[6])
bop <- bop[[1]]
cpr <- html_table(html_nodes(marvel, "table")[7])
cpr <- cpr[[1]]
# Tidy col_names
for (i in seq_along(names(bop))) {
if (names(bop)[i] != bop[[i]][1]) {
colnames(bop)[i] <- paste(bop[[i]][1], names(bop)[i], collapse = " ")
}
}
for (i in seq_along(names(cpr))) {
if (names(cpr)[i] != cpr[[i]][1]) {
colnames(cpr)[i] <- paste(cpr[[i]][1], names(cpr)[i], collapse = " ")
}
}
bop <- bop[-c(1,2,3,nrow(bop)), ]
bop <- bop[!grepl("Phase\\s",bop$Film),]
cpr <- cpr[-c(1,2,3), ]
cpr <- cpr[!grepl("Phase\\s",cpr$Film),]
df <- merge(bop, cpr, by.x = "Film", by.y = "Film",sort = F)
head(df)
View(df)
